1、命名规范
	1.变量的命名(使用小驼峰法或者如下规范)
		使用前缀声明类型
		$intNum    = 1;						// int      整形
		$strName   = 'username';			// string   字符串(建议简单字符串统一使用单引号)
		$douNum    = 0.23;					// double   浮点型(双精度)
		$floNum    = 12.3;					// float    浮点型(单精度)
		$isTure    = true;					// boolean  布尔型
		$arrData   = array(1, 2, 3);		// array    数组
		$resResult = fopen('./test.txt');	// resource 资源类型
		$objModel  = new Model();			// object   对象
		// 或者参考
			a.使用小写字母，多个单词使用'_'间隔 例：$base_url = '123';
			b.全局变量的使用$g_开头,如： $g_title = 'name';
	2.常量的命名使用的大写 , 多个单词使用'_' 隔开
		例	defined('MY_NAME', '123') ;
	3.函数的命名( 建议动作加名称 小驼峰法 )
		例如：function getName() 
		{
			return 'name' ;
		}
	4.类名的命名( 包括文件名 )单词首字母大写( 大驼峰法 )
	class MyName
	{

	}
	注：成员属性命名遵从小驼峰法命名，成员方法遵从函数命名，私有属性和方法建议使用'_'开头
	class MyName 
	{
		private $_myName;	// 私有属性
		public  $myTitle;  // 公共属性
		
		// 私有方法
		private function _getName() 
		{
			return 123;
		}
		
		// 公共方法
		public function getTitle()
		{
			return 456; 
		}
	}
2、注释规范
	a.文件注释
	/**
	 * 这是一个什么文件
	 * 
	 * 此文件用来做什么的( 详细说明, 可选 )
	 * @author  作者
	 * @version 版本
	 */
	 
	 b.函数注释
	 /**
	  * myName
	  * 函数的含义说明
	  *
	  * @since 1.0
	  * @access pubic 函数类型( 公共 私有 受保护 )
	  * @param mixed $params 参数说明( 类型 参数 说明 )
	  * @return array 返回值说明( 返回类型 说明 ) 
	  */
	  
	  c.类的注释
	  /**
	   * 类的介绍
	   *
	   * 类的详细介绍(可选)
	   * @author	作者
	   * @copyright 版权信息
	   * @link	链接
	   * @package	所属库文件
	   * @version   版本	   
	   * @since 	引入版本
	   */
	  
	  d.多行注释/*  */ , 单行注释 // ( 代码后面注意对齐 )
	  e.后期修改上的注释
	  // edited by liujx 2015-5-28 [修改内容] start
	  // end 
3、程序规范
	1.PHP代码文件必须以 <?php 标签开始;必须以 不带BOM的 UTF-8 编码;
	2.大括号的使用{} 
	在程序中进行结构控制代码编写，如if、for、while、switch等结构，大括号传统的有两种书写习惯，分别如下：
		a.直接跟在控制语句之后，不换行，如
			for ($i = 0; $i < $count; $i++) {
				echo "test" ;
			}
		b.在控制语句下一行，如
			for ($i = 0; $i < $count; $i++)
			{
				echo "test" ;
			}
	3.小括号、关键词和函数遵循以下规则：
		a.不要把小括号和关键词紧贴在一起，要用一个空格间隔；如if ($a < $b) ；
		b.小括号和函数名间没有空格；如$test = date("ymdhis") ；
		c.除非必要，不要在Return返回语句中使用小括号。 如Return $a ；

	4. = 符号书写 在程序中 = 符号的书写遵循以下规则：
		a.在 = 符号的两侧，均需留出一个空格；如$a = $b 、if ( $a = = $b )等；
		b.在一个申明块，或者实现同样功能的一个块中，要求=号尽量上下对其，左边可以为了保持对齐使用多个空格，而右边要求空一个空格；如下例：
			$testa   = $aaa ;
			$testaa  = $bbb ;
			$testaaa = $ccc ;